using System;
using System.Linq;

namespace VisCPU.Utility.SharedBase
{

    public struct AddressItem : IEquatable < AddressItem >
    {

        public bool AutoGenerated => LinkerArguments.Contains( "linker:autogen" );

        public bool Hide => LinkerArguments.Contains("linker:hide");

        public bool Internal => LinkerArguments.Contains("linker:internal");

        public uint Address { get; set; }

        public object[] LinkerArguments { get; set; }

        public AddressItem Offset( int off )
        {
            return new AddressItem
                   {
                       Address = ( uint ) ( Address + off ),
                       LinkerArguments = LinkerArguments
                   };
        }

        public bool Equals( AddressItem other )
        {
            return Address == other.Address;
        }

        public override bool Equals( object obj )
        {
            return obj is AddressItem other && Equals( other );
        }

        public override int GetHashCode()
        {
            return ( int ) Address;
        }

    }

}
