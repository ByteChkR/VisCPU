using System;
using System.IO;

using VisCPU;
using VisCPU.Instructions;
using VisCPU.Peripherals.Benchmarking;
using VisCPU.Peripherals.Console;
using VisCPU.Peripherals.HostFS;
using VisCPU.Peripherals.Memory;
using VisCPU.Utility;
using VisCPU.Utility.ArgumentParser;
using VisCPU.Utility.Events;
using VisCPU.Utility.EventSystem;
using VisCPU.Utility.Logging;
using VisCPU.Utility.Settings;


static class Program
{
	private const string B64CODE = "$$$$CODEHERE$$$$";
	[STAThread]
	public static void Main()
	{
		Console.WriteLine("Loading Code..");
		byte[] asm = System.Convert.FromBase64String(B64CODE);

		Run(asm);
	}
	private static void Run(byte[] data)
	{
		CPUSettings.InstructionSet = new DefaultSet();
		ConsoleInInterfaceSettings cins = ConsoleInInterfaceSettings.Create();
        ConsoleOutInterfaceSettings couts = ConsoleOutInterfaceSettings.Create();
        MemorySettings ms = MemorySettings.Create();
        HostFileSystemSettings hfs = HostFileSystemSettings.Create();
    	uint[] fileCode = data.ToUInt();

    	ConsoleInInterface cin = new ConsoleInInterface();

    	ConsoleOutInterface cout =
        	new ConsoleOutInterface();

    	HostFileSystem hostFs = new HostFileSystem();
    	BenchmarkDevice benchDev = new BenchmarkDevice();

    	MemoryBus bus = new MemoryBus(new Memory(MemorySettings.Create()), cin, cout, hostFs, benchDev);

    	CPU cpu = new CPU(bus, 0, 0);
    	cpu.LoadBinary(fileCode);
    	cpu.Run();
	}
}