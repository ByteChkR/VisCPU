#import "link D:\Users\Tim\Documents\viscpu\HL\Kernel\Program.vbin"

private static string s_StrTestFilePath = "0:data/test.cfg";
private static string s_StrTestFile = "KeyA=ABC|KeyB=CDE|KeyC=1337|";

public static uint cfg_has_key(uint cfgPtr, uint cfgPtrLen, uint key, uint keyL)
{
	//Find "{key}="
	uint strCmpLen = keyL + 1;
	uint strCmpHelper = malloc(strCmpLen);
	strCmpHelper[strCmpLen-1] = '=';
	mem_copy(key, strCmpHelper, keyL);


	uint p = str_contains_str(cfgPtr, cfgPtrLen, strCmpHelper, strCmpLen);
	
	
	free(strCmpHelper);
	return p;
}

public static uint cfg_get_val(uint cfgPtr, uint cfgPtrLen, uint key, uint keyL, uint cfgValLenPtr)
{
	//Find "{key}="
	uint strCmpLen = keyL + 1;
	uint strCmpHelper = malloc(strCmpLen);
	strCmpHelper[strCmpLen-1] = '=';
	mem_copy(key, strCmpHelper, keyL);


	uint p = str_find_str(cfgPtr, cfgPtrLen, strCmpHelper, strCmpLen);
	
	uint pv = p + strCmpLen;

	uint newL = cfgPtrLen - pv;
	uint pl = str_find_char('\n', cfgPtr + pv, newL);

	free(strCmpHelper);

	cfgValLenPtr[0] = pl;
	return cfgPtr + pv;
}

public static void cfg_test_self()
{
	if(!fs_exists(&s_StrTestFilePath, size_of(s_StrTestFilePath)))
	{
		uint ptr = &s_StrTestFile;
		for(uint i = 0; i < size_of(s_StrTestFile); i++)
		{
			uint v = ptr[i];
			if(v == '|')
			{
				ptr[i] = '\n';
			}
		}
		uint file = fs_create(&s_StrTestFilePath, size_of(s_StrTestFilePath));
		f_writebuf(file, ptr, size_of(s_StrTestFile));
		fs_close(file);
	}

	uint f = fs_open(&s_StrTestFilePath, size_of(s_StrTestFilePath));
	f_setpos(f, 0);
	uint sz = f_getsize(f);
	uint cfgPtr = malloc(sz);
	f_readbuf(f, cfgPtr, sz);

	string kAK = "KeyA";
	string kBK = "KeyB";
	string kCK = "KeyC";
	uint kAL;
	uint kA = cfg_get_val(cfgPtr, sz, &kAK, size_of(kAK), &kAL);
	uint kBL;
	uint kB = cfg_get_val(cfgPtr, sz, &kBK, size_of(kBK), &kBL);
	uint kCL;
	uint kC = cfg_get_val(cfgPtr, sz, &kCK, size_of(kCK), &kCL);


	kprintl(kA, kAL);
	kprintl(kB, kBL);
	kprintl(kC, kCL);

	free(cfgPtr);

}