
private const uint C_OUT = 0xFFFF1001;
private const uint C_NOUT = 0xFFFF1002;
private const uint C_RD = 0xFFFF1011;
private const uint C_CLR = 0xFFFF1021;
private const uint C_IAV = 0xFFFF1012;

public static void kclear()
{
	C_CLR = 1;
}

public static uint kread()
{
	uint v = C_RD;
	return v;
}

public static uint kcanread()
{
	uint v = C_IAV;
	return v;
}

public static void kprintn(uint num)
{
	C_NOUT = num;
}

public static void kprintc(uint c)
{
	C_OUT = c;
}

public static void kprint(uint p, uint l)
{
	for(uint i = 0; i < l; i++)
	{
		uint v = p[i];
		kprintc(v);
	}
}

public static void kprintnl(uint num)
{
	kprintn(num);
	kprintc('\n');
}

public static void kprintl(uint p, uint l)
{
	kprint(p, l);
	kprintc('\n');
}


public static void kerror(uint p, uint l)
{
	kprintl(p,l);
	interrupt(1);
}
