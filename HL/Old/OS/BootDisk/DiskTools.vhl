#include "System/System.vhl"

public class DiskTools
{
	public static uint GetBootableMagic()
	{
		uint v = 0;
		v |= 1337;
		v |= 420;
		v |= 69;
		return v;
	}

	public static void MakeBootable(Partition drv, uint binLen, uint start, uint entry)
	{
		drv.Write(0, DiskTools.GetBootableMagic()); //Write Magic Number
		drv.Write(1, binLen); //Write Magic Number
		drv.Write(2, start); //Write Magic Number
		drv.Write(3, entry); //Write Magic Number
	}

	public static void Format(Partition drv)
	{
		string formatMsg = "Formatting Partition..";
		Console.WriteLine(&formatMsg, size_of(formatMsg));
		uint size = drv.GetSize();
		uint p = 0;
		uint pp = size / 100;
		string processMsg = "% Formatting...";
		for(uint i = 0; i < size; i++)
		{
			drv.Write(i, 0);
			if(i % pp == 0)
			{
				Console.WriteNumber(p);
				Console.WriteLine(&processMsg, size_of(processMsg));
				p++;			
			}
		}
	}

	public static uint IsBootable(Partition drv)
	{
		uint magic = DiskTools.GetBootableMagic();
		uint drvMagic = drv.Read(0);
		return drvMagic == magic;
	}

}