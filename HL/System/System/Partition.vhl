#include "DEVS/STOREDRV.vhl"
#include "ExceptionHandler.vhl"
#include "OutOfBoundsException.vhl"
#include "Settings.vhl"

public class Partition
{
	private uint m_Device;
	private uint m_Start;
	private uint m_Length;
	public static Partition(uint dev, uint start, uint len)
	{
		this.m_Device = dev;
		this.m_Start = start;
		this.m_Length = len;
	}

	public uint Start()
	{
		uint v = this.m_Start;
		return v;
	}

	public uint GetSize()
	{
		uint v = this.m_Length;
		return v;
	}

	public void Write(uint addr, uint data)
	{
		STOREDRV dev = this.m_Device;
		uint a = this.Start() + addr;
		if(ENABLE_RANGE_CHECK() && a >= dev.GetSize())
		{
			if(ENABLE_THROW_ERRORS())
			{
				ExceptionHandler.Throw(OutOfBoundsException());
			}
			return;
		}
		dev.Write(a, data);
	}

	public uint Read(uint addr)
	{
		STOREDRV dev = this.m_Device;
		uint a = this.Start() + addr;
		if(ENABLE_RANGE_CHECK() && a >= dev.GetSize())
		{
			if(ENABLE_THROW_ERRORS())
			{
				ExceptionHandler.Throw(OutOfBoundsException());
			}
			return;
		}
		uint v = dev.Read(a);
		return v;
	}

	public void WriteBuffer(uint src, uint dst, uint start, uint len)
	{
		STOREDRV dev = this.m_Device;
		uint a = this.Start() + dst;
		if(ENABLE_RANGE_CHECK() && (a + len) >= dev.GetSize())
		{
			if(ENABLE_THROW_ERRORS())
			{
				ExceptionHandler.Throw(OutOfBoundsException());
			}
			return;
		}
		dev.WriteBuffer(src, a, len);
	}

	public void ReadBuffer(uint src, uint dst, uint len)
	{
		STOREDRV dev = this.m_Device;
		uint a = this.Start() + src;
		if(ENABLE_RANGE_CHECK() && (a + len) >= dev.GetSize())
		{
			if(ENABLE_THROW_ERRORS())
			{
				ExceptionHandler.Throw(OutOfBoundsException());
			}
			return;
		}
		dev.ReadBuffer(a, dst, len);
	}
}