
#include "../ExceptionHandler.vhl"
#include "DeviceNotFoundException.vhl"

private const uint A_PRESENT = 0xFFFF6000;
private const uint A_GEZ_SZ = 0xFFFF6001;
private const uint A_WRITE = 0xFFFF6002;
private const uint A_WRITEBUF = 0xFFFF6003;
private const uint A_READ = 0xFFFF6004;
private const uint A_READBUF = 0xFFFF6005;

public class STOREDRV
{
	private uint m_PRESENT;
	private uint m_GET_SZ;
	private uint m_WRITE;
	private uint m_WRITE_BUF;
	private uint m_READ;
	private uint m_READ_BUF;

	public static STOREDRV(uint presentPin)
	{
		this.m_PRESENT = presentPin;

		if(!this.IsPresent())
		{
			ExceptionHandler.Throw(DeviceNotFoundException());
		}

		this.m_GET_SZ = presentPin + 1;
		this.m_WRITE = presentPin + 2;
		this.m_WRITE_BUF = presentPin + 3;
		this.m_READ = presentPin + 4;
		this.m_READ_BUF = presentPin + 5;
	}

	private uint IsPresent()
	{
		uint p = this.m_PRESENT;
		uint v = p[0];
		return v;
	}


	public uint GetSize()
	{
		uint s = this.m_GET_SZ;
		uint v = s[0];
		return v;
	}

	public void Write(uint addr, uint data)
	{
		uint w = this.m_WRITE;
		w[0] = addr;
		w[0] = data;
	}

	public uint Read(uint addr)
	{
		uint r = this.m_READ;
		r[0] = addr;
		uint v = r[0];
		return v;
	}

	public void WriteBuffer(uint src, uint dst, uint len)
	{
		uint wb = this.m_WRITE_BUF;
		wb[0] = src;
		wb[0] = dst;
		wb[0] = len;
	}

	public void ReadBuffer(uint src, uint dst, uint len)
	{
		uint rb = this.m_READ_BUF;
		rb[0] = src;
		rb[0] = dst;
		rb[0] = len;
	}
}