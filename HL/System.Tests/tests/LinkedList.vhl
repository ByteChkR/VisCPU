#include "../System/System.vhl"


public static void LinkedListExample()
{
	//Allocator Setup
	RawAllocator a = RawAllocator(100000, 100000);
	//Optimize recursively
	a.SetOptimizationLevel(2);

	//Linked List Setup
	LinkedList list = LinkedList(a); //Pass Allocator in Constructor


	list.Add(1337);
	list.Insert(0, 420);
	list.Add(69);
	list.Add(69);

	uint count = list.Count(); //4 Elements

	list.RemoveAt(0); //Remove Item at index 0

	count = list.Count(); //3 Elements

	list.RemoveAll(69); //Remove all Elements with value "69"

	count = list.Count(); //1 Element

	list.Add(123);
	list.Add(321);

	list.Set(0, 666); //Set Value by index.
	uint first = list.Get(0); //Get Value by Index.

	list.Clear(); //Clear List Content
	count = list.Count(); //0 Elements
}

public static void RunLLTests()
{

	RawAllocator a = RawAllocator(100000, 100000);
	a.SetOptimizationLevel(2);

	LinkedList ll = LinkedList(a);

	for(uint i = 0; i < 10; i++)
	{
		ll.Add(i % 5);
	}

	//Write Allocation Table with items in the list
	a.WriteDebugData();

	ll.Remove(0); //Remove all Instances of Value 0

	//Print all Values
	for(uint i = 0; i < ll.Count(); i++)
	{
		uint v = ll.Get(i);
		Console.WriteNumberLine(v);
	}

	//Clear Linked List
	ll.Clear();

	//Print Allocation Table(should be empty after clear)
	a.WriteDebugData();
}