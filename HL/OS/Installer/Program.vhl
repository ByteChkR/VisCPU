//Include the Embedded OS Data
//When Including VASM files into HL the exported symbols need to be set manually
#include "OSEmbed.vasm" __OS_DATA __OS_DATA_LEN
#include "OS.Common/DiskTools.vhl"
#include "System/System.vhl"

//Create a Wrapper Class
public class OSData
{
	public static uint Data()
	{
		return __OS_DATA;
	}

	public static uint Size()
	{
		return __OS_DATA_LEN;
	}
}

//Steps:
//1. Try Load the Disk Drive
//2. Copy all data to the Disk Drive
//	2.1. Create Magic Bytes that the BootLoader can detect
//3. Print Success Message
//4. Halt Execution

private static void Initialize()
{
	STOREDRV drv = DiskTools.LoadDriver();


	if(DiskTools.IsBootable(drv))
	{
		string foundPrevInstallMsg = "Found Previous OS Installation. Formatting Drive...";
		Console.WriteLine(&foundPrevInstallMsg, size_of(foundPrevInstallMsg));
		DiskTools.FormatDrive(drv);
	}

	string copyDataMsg = "Installing OS...";
	Console.WriteLine(&copyDataMsg, size_of(copyDataMsg));
	drv.WriteBuffer(OSData.Data(), 4, 0, OSData.Size());
	drv.Write(0, DiskTools.GetBootableMagic())
	drv.Write(1, OSData.Size())
	drv.Write(2, 60000);
	drv.Write(3, 60000);
	string copyDataFinishedMsg = "Finished. Reboot with BootLoader Image.";
	Console.WriteLine(&copyDataFinishedMsg, size_of(copyDataFinishedMsg));

	halt();
}

Initialize();