; ________________ Includes ________________
:include "D:\Users\Tim\Documents\VisCPU\VisOS\sys\driver\test\test_device.vasm"
; ________________ CONST VALUES ________________
; ________________ VARIABLE FIELDS ________________
:data __str_test_name "Var1ArgsTest" linker:hide
:data __str_ret_val_fail "Return value is not5" linker:hide
:data __TestC_arg 1 linker:hide
:data __TestV_arg 1 linker:hide
:data __TestV_b 1 linker:hide
:data tmp_373 1 linker:hide
:data tmp_374 1 linker:hide
:data __VarV1ArgsTest_ar 1 linker:hide
:data __VarV1ArgsTest_a 1 linker:hide
:data tmp_375 1 linker:hide
:data tmp_379 1 linker:hide
:data __VarV1ArgsTest_c 1 linker:hide
:data tmp_381 1 linker:hide
:data tmp_385 1 linker:hide
:data tmp_387 1 linker:hide
:data __VarC1ArgsTest_a 1 linker:hide
:data tmp_388 1 linker:hide
:data tmp_392 1 linker:hide
:data __VarC1ArgsTest_c 1 linker:hide
:data tmp_394 1 linker:hide
:data tmp_398 1 linker:hide
; ________________ MAIN PROGRAM CODE ________________
JSR Var1ArgsTest
HLT
; ________________ FUNCTION CODE ________________
.TestC linker:hide
POP __TestC_arg
:include "D:\Users\Tim\Documents\VisCPU\VisOS\sys\driver\test\test_device.vasm"
PUSH __TestC_arg
RET

.TestV linker:hide
POP __TestV_arg
:include "D:\Users\Tim\Documents\VisCPU\VisOS\sys\driver\test\test_device.vasm"
COPY __TestV_arg tmp_373
COPY tmp_373 __TestV_b ; Left: def b ; Right: arg
PUSH __TestV_b
RET

.VarV1ArgsTest linker:hide
:include "D:\Users\Tim\Documents\VisCPU\VisOS\sys\driver\test\test_device.vasm"
LOAD tmp_374 __str_test_name
PUSH tmp_374; Push Param ptr_of(str_test_name)
LOAD tmp_374 12
PUSH tmp_374; Push Param size_of(str_test_name)
JSR BeginTest
LOAD tmp_374 5
COPY tmp_374 __VarV1ArgsTest_ar ; Left: def ar ; Right: 5
PUSH __VarV1ArgsTest_ar; Push Param ar
JSR TestC
; Write back return value to 'tmp_375'
POP tmp_375
COPY tmp_375 __VarV1ArgsTest_a ; Left: def a ; Right: TestC(ar)
; Start IF
LOAD tmp_379 5
LOAD tmp_374 0
BNE __VarV1ArgsTest_a tmp_379 bexpr_eq_380
LOAD tmp_374 1
.bexpr_eq_380 linker:hide
BEZ tmp_374 if_end_376
PUSH __VarV1ArgsTest_ar; Push Param ar
JSR TestV
; Write back return value to 'tmp_381'
POP tmp_381
COPY tmp_381 __VarV1ArgsTest_c ; Left: def c ; Right: TestV(ar)
; Start IF
LOAD tmp_385 5
LOAD tmp_379 0
BNE __VarV1ArgsTest_c tmp_385 bexpr_eq_386
LOAD tmp_379 1
.bexpr_eq_386 linker:hide
BEZ tmp_379 if_end_382
JSR PassTest
RET
JMP if_end_382
.if_end_382 linker:hide
JMP if_end_376
.if_end_376 linker:hide
LOAD tmp_385 __str_ret_val_fail
PUSH tmp_385; Push Param ptr_of(str_ret_val_fail)
LOAD tmp_379 20
PUSH tmp_379; Push Param size_of(str_ret_val_fail)
JSR FailTest
RET

.VarC1ArgsTest linker:hide
:include "D:\Users\Tim\Documents\VisCPU\VisOS\sys\driver\test\test_device.vasm"
LOAD tmp_387 __str_test_name
PUSH tmp_387; Push Param ptr_of(str_test_name)
LOAD tmp_387 12
PUSH tmp_387; Push Param size_of(str_test_name)
JSR BeginTest
LOAD tmp_388 5
PUSH tmp_388; Push Param 5
JSR TestC
; Write back return value to 'tmp_388'
POP tmp_388
COPY tmp_388 __VarC1ArgsTest_a ; Left: def a ; Right: TestC(5)
; Start IF
LOAD tmp_392 5
LOAD tmp_387 0
BNE __VarC1ArgsTest_a tmp_392 bexpr_eq_393
LOAD tmp_387 1
.bexpr_eq_393 linker:hide
BEZ tmp_387 if_end_389
LOAD tmp_394 5
PUSH tmp_394; Push Param 5
JSR TestV
; Write back return value to 'tmp_394'
POP tmp_394
COPY tmp_394 __VarC1ArgsTest_c ; Left: def c ; Right: TestV(5)
; Start IF
LOAD tmp_398 5
LOAD tmp_392 0
BNE __VarC1ArgsTest_c tmp_398 bexpr_eq_399
LOAD tmp_392 1
.bexpr_eq_399 linker:hide
BEZ tmp_392 if_end_395
JSR PassTest
RET
JMP if_end_395
.if_end_395 linker:hide
JMP if_end_389
.if_end_389 linker:hide
LOAD tmp_398 __str_ret_val_fail
PUSH tmp_398; Push Param ptr_of(str_ret_val_fail)
LOAD tmp_392 20
PUSH tmp_392; Push Param size_of(str_ret_val_fail)
JSR FailTest
RET

.Var1ArgsTest
:include "D:\Users\Tim\Documents\VisCPU\VisOS\sys\driver\test\test_device.vasm"
JSR VarC1ArgsTest
JSR VarV1ArgsTest
RET

