; ________________ Includes ________________
:include "D:\Users\Tim\Documents\VisCPU\VisOS\sys\driver\test\test_device.vasm"
; ________________ CONST VALUES ________________
; ________________ VARIABLE FIELDS ________________
:data __str_test_name "EqVar1ArgsTest" linker:hide
:data __str_ret_val_fail "Return value is not5" linker:hide
:data __TestC_arg1 1 linker:hide
:data __TestV_arg1 1 linker:hide
:data __TestV_b 1 linker:hide
:data tmp_777 1 linker:hide
:data tmp_778 1 linker:hide
:data __EqVar1ArgsTest_a 1 linker:hide
:data tmp_779 1 linker:hide
:data tmp_780 1 linker:hide
:data __EqVar1ArgsTest_x 1 linker:hide
:data __EqVar1ArgsTest_b 1 linker:hide
:data tmp_786 1 linker:hide
; ________________ MAIN PROGRAM CODE ________________
JSR EqVar1ArgsTest
HLT
; ________________ FUNCTION CODE ________________
.TestC linker:hide
POP __TestC_arg1
:include "D:\Users\Tim\Documents\VisCPU\VisOS\sys\driver\test\test_device.vasm"
PUSH __TestC_arg1
RET

.TestV linker:hide
POP __TestV_arg1
:include "D:\Users\Tim\Documents\VisCPU\VisOS\sys\driver\test\test_device.vasm"
COPY __TestV_arg1 tmp_777
COPY tmp_777 __TestV_b ; Left: def b ; Right: arg1
PUSH __TestV_b
RET

.EqVar1ArgsTest
:include "D:\Users\Tim\Documents\VisCPU\VisOS\sys\driver\test\test_device.vasm"
LOAD tmp_778 __str_test_name
PUSH tmp_778; Push Param ptr_of(str_test_name)
LOAD tmp_778 14
PUSH tmp_778; Push Param size_of(str_test_name)
JSR BeginTest
LOAD tmp_779 5
PUSH tmp_779; Push Param 5
JSR TestC
; Write back return value to 'tmp_779'
POP tmp_779
LOAD tmp_780 5
LOAD tmp_778 0
BNE tmp_779 tmp_780 bexpr_eq_781
LOAD tmp_778 1
.bexpr_eq_781 linker:hide
COPY tmp_778 __EqVar1ArgsTest_a ; Left: def a ; Right: TestC(5)(OpComparison)5
; Start IF
LOAD tmp_779 1
LOAD tmp_780 0
BNE __EqVar1ArgsTest_a tmp_779 bexpr_eq_785
LOAD tmp_780 1
.bexpr_eq_785 linker:hide
BEZ tmp_780 if_end_782
LOAD tmp_778 5
COPY tmp_778 __EqVar1ArgsTest_x ; Left: def x ; Right: 5
PUSH __EqVar1ArgsTest_x; Push Param x
JSR TestV
; Write back return value to 'tmp_778'
POP tmp_778
LOAD tmp_786 5
LOAD tmp_779 0
BNE tmp_778 tmp_786 bexpr_eq_787
LOAD tmp_779 1
.bexpr_eq_787 linker:hide
COPY tmp_779 __EqVar1ArgsTest_b ; Left: def b ; Right: TestV(x)(OpComparison)5
; Start IF
LOAD tmp_778 1
LOAD tmp_786 0
BNE __EqVar1ArgsTest_b tmp_778 bexpr_eq_791
LOAD tmp_786 1
.bexpr_eq_791 linker:hide
BEZ tmp_786 if_end_788
JSR PassTest
RET
JMP if_end_788
.if_end_788 linker:hide
JMP if_end_782
.if_end_782 linker:hide
LOAD tmp_779 __str_ret_val_fail
PUSH tmp_779; Push Param ptr_of(str_ret_val_fail)
LOAD tmp_778 20
PUSH tmp_778; Push Param size_of(str_ret_val_fail)
JSR FailTest
RET

