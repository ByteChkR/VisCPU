; ________________ Includes ________________
:include "D:\Users\Tim\Documents\VisCPU\VisOS\sys\driver\test\test_device.vasm"
; ________________ CONST VALUES ________________
; ________________ VARIABLE FIELDS ________________
:data __str_test_name "EqIfVar1ArgsTest" linker:hide
:data __str_ret_v_val_fail "V:Return value is not5" linker:hide
:data __str_ret_c_val_fail "C:Return value is not5" linker:hide
:data __TestC_arg1 1 linker:hide
:data __TestV_arg1 1 linker:hide
:data __TestV_b 1 linker:hide
:data tmp_972 1 linker:hide
:data tmp_973 1 linker:hide
:data tmp_977 1 linker:hide
:data tmp_978 1 linker:hide
:data tmp_979 1 linker:hide
:data tmp_980 1 linker:hide
:data __EqIfVar1ArgsTest_x 1 linker:hide
:data tmp_986 1 linker:hide
; ________________ MAIN PROGRAM CODE ________________
JSR EqIfVar1ArgsTest
HLT
; ________________ FUNCTION CODE ________________
.TestC linker:hide
POP __TestC_arg1
:include "D:\Users\Tim\Documents\VisCPU\VisOS\sys\driver\test\test_device.vasm"
PUSH __TestC_arg1
RET

.TestV linker:hide
POP __TestV_arg1
:include "D:\Users\Tim\Documents\VisCPU\VisOS\sys\driver\test\test_device.vasm"
COPY __TestV_arg1 tmp_972
COPY tmp_972 __TestV_b ; Left: def b ; Right: arg1
PUSH __TestV_b
RET

.EqIfVar1ArgsTest
:include "D:\Users\Tim\Documents\VisCPU\VisOS\sys\driver\test\test_device.vasm"
LOAD tmp_973 __str_test_name
PUSH tmp_973; Push Param ptr_of(str_test_name)
LOAD tmp_973 16
PUSH tmp_973; Push Param size_of(str_test_name)
JSR BeginTest
; Start IF
LOAD tmp_977 1
LOAD tmp_979 5
PUSH tmp_979; Push Param 5
JSR TestC
; Write back return value to 'tmp_979'
POP tmp_979
LOAD tmp_980 5
LOAD tmp_978 0
BNE tmp_979 tmp_980 bexpr_eq_981
LOAD tmp_978 1
.bexpr_eq_981 linker:hide
LOAD tmp_973 0
BNE tmp_977 tmp_978 bexpr_eq_982
LOAD tmp_973 1
.bexpr_eq_982 linker:hide
BEZ tmp_973 if_end_974
LOAD tmp_980 5
COPY tmp_980 __EqIfVar1ArgsTest_x ; Left: def x ; Right: 5
; Start IF
LOAD tmp_978 1
PUSH __EqIfVar1ArgsTest_x; Push Param x
JSR TestV
; Write back return value to 'tmp_980'
POP tmp_980
LOAD tmp_986 5
LOAD tmp_977 0
BNE tmp_980 tmp_986 bexpr_eq_987
LOAD tmp_977 1
.bexpr_eq_987 linker:hide
LOAD tmp_979 0
BNE tmp_978 tmp_977 bexpr_eq_988
LOAD tmp_979 1
.bexpr_eq_988 linker:hide
BEZ tmp_979 if_end_983
JSR PassTest
RET
JMP if_end_983
.if_end_983 linker:hide
LOAD tmp_986 __str_ret_v_val_fail
PUSH tmp_986; Push Param ptr_of(str_ret_v_val_fail)
LOAD tmp_980 22
PUSH tmp_980; Push Param size_of(str_ret_v_val_fail)
JSR FailTest
RET
JMP if_end_974
.if_end_974 linker:hide
LOAD tmp_977 __str_ret_c_val_fail
PUSH tmp_977; Push Param ptr_of(str_ret_c_val_fail)
LOAD tmp_978 22
PUSH tmp_978; Push Param size_of(str_ret_c_val_fail)
JSR FailTest
RET

